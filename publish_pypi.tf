variable "PYPI_TOKEN" {
  type = string
}

resource "github_repository_file" "setup_cfg" {
  for_each   = { for k, v in local.repos : k => v if contains(v.publish, "pypi.org") }
  file       = "setup.cfg"
  content    = <<EOF
# Autogenerated by https://github.com/BarnabyShearer/meta

[metadata]
name = ${each.key}
description = ${split("\n", each.value.description)[0]}
long_description = file: README.rst
long_description_content_type = text/x-rst
keywords =%{for keyword in each.value.topics} ${keyword}%{endfor}
author = Barnaby Shearer
author_email = b@zi.is
classifiers =
    Development Status :: 5 - Production/Stable
%{if each.value.license == "bsd-3-clause"}    License :: OSI Approved :: BSD License
%{endif}%{if each.value.license == "mit"}    License :: OSI Approved :: MIT License
%{endif}%{if contains(each.value.check, "python2")}    Programming Language :: Python :: 2
%{endif}    Programming Language :: Python :: 3
%{if lookup(each.value, "lektor.plugins", {}) != {} }    Framework :: Lektor
    Environment :: Plugins
%{endif}project_urls =
    Source = https://github.com/BarnabyShearer/${each.key}
    Tracker = https://github.com/BarnabyShearer/${each.key}/issues
%{if contains(each.value.publish, "readthedocs.org")}    Documentation = https://${each.key}.readthedocs.io/en/latest/
%{endif}%{if contains(each.value.publish, "hub.docker.com")}    Docker = https://hub.docker.com/repository/docker/barnabyshearer/${lower(each.key)}
%{endif}
[options]
packages = find:
install_requires = %{for dep in lookup(each.value, "requires", [])}
    ${dep}%{endfor}
python_requires = >=%{if contains(each.value.check, "python2")}2.7%{else}3.7%{endif}

[options.package_data]
* = py.typed, *.c, *.h
%{if lookup(each.value, "scripts", {}) != {} }
[options.entry_points]
console_scripts = %{for script, entry in each.value.scripts}
    ${script} = ${entry}%{endfor}
%{endif}%{if lookup(each.value, "lektor.plugins", {}) != {} }
[options.entry_points]
lektor.plugins = %{for script, entry in each.value["lektor.plugins"]}
    ${script} = ${entry}%{endfor}
%{endif}
[bdist_wheel]
universal=1
EOF
  repository = github_repository.main[each.key].name
}

resource "github_repository_file" "publish_python" {
  for_each   = { for k, v in local.repos : k => v if contains(v.publish, "pypi.org") }
  file       = ".github/workflows/publish.yml"
  content    = <<EOF
# Autogenerated by https://github.com/BarnabyShearer/meta

name: Publish to PyPI

on:
  push:
    tags: [ 'v*' ]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - run: pip install build
    - run: python -m build
    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: $${{ secrets.PYPI_API_TOKEN }}
EOF
  repository = github_repository.main[each.key].name
}

resource "macaroons_pypi_token" "pypi_token" {
  for_each     = { for k, v in local.repos : k => v if contains(v.publish, "pypi.org") }
  source_token = var.PYPI_TOKEN
  project      = each.key
}

resource "github_actions_secret" "pypi_token" {
  for_each        = { for k, v in local.repos : k => v if contains(v.publish, "pypi.org") }
  repository      = github_repository.main[each.key].name
  secret_name     = "PYPI_API_TOKEN"
  plaintext_value = macaroons_pypi_token.pypi_token[each.key].token
}
